@import url("https://fonts.googleapis.com/css2?family=Kosugi+Maru&family=M+PLUS+Rounded+1c&family=Noto+Sans+JP&family=Poppins&family=Sawarabi+Mincho&family=Space+Mono&family=Material+Icons&display=swap");

*{
  --defaultFont: "Poppins", "Kosugi Maru", "M PLUS Rounded 1c", "Noto Sans JP", sans-serif;
  --sameWidthFont: "Noto Sans JP", "Poppins", "Kosugi Maru", "M PLUS Rounded 1c", sans-serif;
  box-sizing: border-box;
  font-family: var(--defaultFont);

  font-size: 16px;
  font-weight: lighter;
}

html, body{
  padding: 0;
  margin: 0;
  overflow: hidden;
}


.container{
  display: none;
  width: 100vw;
  height: 100vh;

  &.showing{ display: grid; }

  div.center{ grid-area: a; }

  &#loader, &#start, &#end{
    grid-template-areas: ". . ." ". a ." ". . .";
    grid-template-rows: 1fr auto 1fr;
    grid-template-columns: 1fr auto 1fr;

    p{
      margin: 16px;
      font-size: 36px;
      text-align: center;

      &#progressMsg{

        &::before{
          font-family: var(--defaultFont);
          content: "Resource Loaded: ";
        }
        font-family: var(--sameWidthFont);
        font-size: 18px;
      }
    }

    div#bar_cont{
      width: 400px;
      height: 36px;

      progress{
        width: 100%;
        height: 100%;
      }
    }

    div#note{
      height: 300px;
      padding: 16px;
      margin: 10px;
      overflow-y: scroll;
      border-radius: 5px;
      box-shadow: 0px 3px 8px 0px #aaa;

      h3{
        font-size: 22px;
        text-align: center;
      }

      p{
        font-size: 16px;
      }

      div.material.chk{
        position: relative;
        display: block;
        width: 200px;
        min-height: 40px;
        margin: auto;

        input[type = checkbox]{
          position: absolute;
          top: 8px;
          left: 8px;
          z-index: 1;
          width: 32px;
          height: 32px;
          margin: 0px;
          opacity: 0;

          & + label{
            position: absolute;
            top: 10.5px;
            left: 8px;
            z-index: 0;
            display: flex;
            align-items: center;
            font-size: 18px;
            color: #000;
            transform: translateY(0px);

            &::before{
              // font-size: 18px;
              display: inline-block;
              // width: 18px;
              // height: 18px;
              // border-radius: 3px;
              // border: 1.5px #aaa solid;
              // // padding-left: 24px;
              // font-size: initial;
              margin-right: 5px;
              // ----------  Material Icons ---------- //
              font-family: "Material Icons";
              font-size: 28px;
              font-style: normal;
              font-weight: normal;
              line-height: 1;
              color: #aaa;
              text-transform: none;
              letter-spacing: normal;
              word-wrap: normal;
              white-space: nowrap;
              // ------------------------------------- //

              content: "check_box_outline_blank";
              transition: 500ms;
              direction: ltr;
              /* Support for all WebKit browsers. */
              -webkit-font-smoothing: antialiased;
              /* Support for Safari and Chrome. */
              text-rendering: optimizeLegibility;
              /* Support for Firefox. */
              -moz-osx-font-smoothing: grayscale;
              /* Support for IE. */
              font-feature-settings: "liga";
              // padding-left: 2px;
              // padding-top: 2px;
            }
          }

          &:checked + label::before{
            color: #1a73e8;
            // padding-left: 0px;
            content: "check_box";
          }

          &:disabled + label{
            color: #888;

            &::before{
              color: inherit;
            }

          }
        }
      }
    }

    #p2s{
      font-size: 24px;
    }
  }

  &#main{
    grid-template-areas: "type type"
      "eng  ph  "
      "eng  ja  "
      "key  key";
    grid-template-rows: 42px 1fr 1fr 250px;
    grid-template-columns: 1fr 1fr;
    padding: 16px;
    gap: 8px;

    & > *:not(.keyboard):not(.cont){
      position: relative;
      display: grid;
      grid-template-areas: ". . ." ". a ." ". . .";
      grid-template-rows: 1fr auto 1fr;
      grid-template-columns: 1fr auto 1fr;
      padding: 16px;
      text-align: center;
      border-radius: 20px;
      box-shadow: inset 0px 0px 10px 0px #aaa;
    }

    & > * > *{
      font-size: inherit;
    }

    label{
      position: absolute;
      top: -8px;
      left: 24px;
      max-width: 90%;
      height: 22px;
      font-size: 22px;
      color: #448aff;
      background-color: #fff;
    }

    div.cont{
      position: relative;
      grid-area: type;
      font-size: 28px;

      .typed{
        display: inline;
        margin: 0;
        font-family: var(--sameWidthFont);

        &::before{
          font-family: var(--defaultFont);
          content: "入力文字数：";
        }
      }

      .time{
        position: absolute;
        top: 0px;
        right: 8px;
        display: inline-block;
        font-size: inherit;
        text-align: right;

        span{ font-family: var(--sameWidthFont); font-size: inherit; }

        div.timeRemainingBar_container{
          display: inline-block;
          width: 400px;
          height: 36px;

          progress{
            width: 100%;
            height: 100%;
          }
        }
      }
    }

    .eng{
      grid-area: eng;
      font-size: 5vw;

      span.typed_char{
        font-size: inherit;
        color: #aaa;
      }

      span.next_char{
        font-size: inherit;
        color: #388e3c;
      }

      span.remaining_char{
        font-size: inherit;
      }
    }

    .pho{
      grid-area: ph;
      font-size: 28px;
      white-space: pre-wrap;
    }

    .jap{
      grid-area: ja;
      font-size: 24px;
      white-space: pre-wrap;
    }

    .keyboard{
      display: grid;
      grid-area: key;
      grid-template-areas: "q q w w e e r r t t y y u u i i o o p p"
        ". a a s s d d f f g g h h j j k k l l ."
        ". . . z z x x c c v v b b n n m m . . .";
      grid-template-rows: repeat(3, calc((100% - 24px)/3));
      grid-template-columns: repeat(20, calc((100% - (12px * 19))/20));
      min-width: calc((80px * 10) + 10px);
      gap: 12px;

      .key{
        width: 80px;
        height: 80px;
        padding: 13px;
        margin: auto;
        font-size: 36px;
        text-align: center;
        border-radius: 50%;
        box-shadow: 0px 0px 10px 0px #aaa;

        &.pressing{
          padding: 16px;
          font-size: 32px;
          box-shadow: inset 0px 0px 10px 0px #aaa;
        }

        &.next{
          background-color: #faebd7;
        }
      }
    }
  }

  &#end .center p{
    font-size: 10vw;
  }

  &#score{
    display: block;
    width: fit-content;
    margin: auto;

    p{
      margin: 16px auto;
      text-align: center;
    }

    p#score{
      width: 100%;
      height: fit-content;
      font-family: var(--sameWidthFont);
      font-size: 5vw;
      border-bottom: 2px solid #aaa;

      &::before{ font-family: var(--defaultFont); content: "Score: "; }

      &::after{ font-family: var(--defaultFont); font-size: 0.75em; content: "点"; }
    }

    .con{
      display: none;

      p{
        margin: 8px auto;
        font-size: 28px;
      }

      p#correct{

        &::before{ content: "正タイプ数: "; }
      }

      p#incorrect{

        &::before{ content: "誤タイプ数: "; }
      }

      p#total{

        &::before{ content: "タイプ数合計: "; }
      }

      p#rate{

        &::before{ content: "正タイプ率: "; }

        &::after{ content: "%"; }
      }

      p#scoreT{

        &::before{ content: "スコア: "; }

        span{
          font-size: 18px;
        }
      }

      p#pm{

        &::before{ content: "1分あたりの正タイプ数: "; } }

      p#ps{

        &::before{ content: "1秒あたりの正タイプ数: "; } }

      p.splitter{
        width: 100%;
        height: 1px;
      }

      button{
        $bg: #1a73e8;
        width: 100%;
        padding: 12px;
        font-size: 16px;
        color: #fff;
        background: $bg;
        border: 0;
        border-radius: 5px;
        outline: 0;

        &:hover{ background: darken($bg, 15%); }

        &:disabled{ background: lighten($bg, 20%); }
      }
    }
  }
}